import xlsxwriter, stats, player, general

def create_structure(worksheet, colours: list[str]):
    worksheet.set_column('A:A', 12)
    worksheet.set_column('C:C', 12)
    
    worksheet.write('A1', 'ID')
    worksheet.write('A2', 'ELO')
    worksheet.write('A3', 'GAMES')
    worksheet.write('A4', 'PLAYTIME (H)')
    worksheet.write('A5', 'WINS')
    worksheet.write('A6', 'LOSES')
    worksheet.write('A7', 'DRAWS')
    
    worksheet.write('A9', 'RED GAMES')
    worksheet.write('A10', 'RED WINS')
    worksheet.write('A11', 'RED LOSES')
    worksheet.write('A12', 'RED DRAWS')
    
    worksheet.write('A14', 'BLU GAMES')
    worksheet.write('A15', 'BLU WINS')
    worksheet.write('A16', 'BLU LOSES')
    worksheet.write('A17', 'BLU DRAWS')
    
    worksheet.write('A19', 'SCOUT', colours[0])
    worksheet.write('B19', 'Games')
    worksheet.write('C19', 'Playtime (H)')
    worksheet.write('D19', 'Kills')
    worksheet.write('E19', 'Assists')
    worksheet.write('F19', 'Deaths')
    worksheet.write('G19', 'KD')
    worksheet.write('H19', 'KDA')
    worksheet.write('I19', 'DPM')
    worksheet.write('J19', 'DTM')
    worksheet.write('K19', 'DMG')
    worksheet.write('L19', 'DT')
    worksheet.write('M19', 'KPM')
    worksheet.write('N19', 'DAPD')
    worksheet.write('O19', 'HR')
    # worksheet.write('P19', 'ACC')

    worksheet.write('A22', 'SOLDIER', colours[1])
    worksheet.write('B22', 'Games')
    worksheet.write('C22', 'Playtime (h)')
    worksheet.write('D22', 'Kills')
    worksheet.write('E22', 'Assists')
    worksheet.write('F22', 'Deaths')
    worksheet.write('G22', 'KD')
    worksheet.write('H22', 'KDA')
    worksheet.write('I22', 'DPM')
    worksheet.write('J22', 'DTM')
    worksheet.write('K22', 'DMG')
    worksheet.write('L22', 'DT')
    worksheet.write('M22', 'KPM')
    worksheet.write('N22', 'DAPD')
    worksheet.write('O22', 'HR')
    worksheet.write('P22', 'AS')

    worksheet.write('A25', 'DEMO', colours[2])
    worksheet.write('B25', 'Games')
    worksheet.write('C25', 'Playtime (h)')
    worksheet.write('D25', 'Kills')
    worksheet.write('E25', 'Assists')
    worksheet.write('F25', 'Deaths')
    worksheet.write('G25', 'KD')
    worksheet.write('H25', 'KDA')
    worksheet.write('I25', 'DPM')
    worksheet.write('J25', 'DTM')
    worksheet.write('K25', 'DMG')
    worksheet.write('L25', 'DT')
    worksheet.write('M25', 'KPM')
    worksheet.write('N25', 'DAPD')
    worksheet.write('O25', 'HR')
    worksheet.write('P25', 'AS')

    worksheet.write('A28', 'MEDIC', colours[3])
    worksheet.write('B28', 'Games')
    worksheet.write('C28', 'Playtime (h)')
    worksheet.write('D28', 'Kills')
    worksheet.write('E28', 'Assists')
    worksheet.write('F28', 'Deaths')
    worksheet.write('G28', 'KD')
    worksheet.write('H28', 'KDA')
    worksheet.write('I28', 'Ubers')
    worksheet.write('J28', 'UD')
    worksheet.write('K28', 'Heals')
    worksheet.write('L28', 'DPM')
    worksheet.write('M28', 'DTM')
    worksheet.write('N28', 'DMG')
    worksheet.write('O28', 'DT')
    worksheet.write('P28', 'KPM')

    return worksheet

def write_data(worksheet, player: player.Player):
    worksheet.write('B1', player.id)
    worksheet.write('B2', player.eloNew)
    worksheet.write('B3', player.gamesCount)
    worksheet.write('B4', (player.scoutPlayTime + player.soldierPlayTime + player.demoPlayTime + player.medicPlayTime))
    worksheet.write('B5', player.wins); worksheet.write('C5', f"{round((player.wins / (player.wins + player.loses + player.draws) * 100), 2)}%")
    worksheet.write('B6', player.loses); worksheet.write('C6', f"{round((player.loses / (player.wins + player.loses + player.draws) * 100), 2)}%")
    worksheet.write('B7', player.draws); worksheet.write('C7', f"{round((player.draws / (player.wins + player.loses + player.draws) * 100), 2)}%")
    
    worksheet.write('B9', player.redGames); worksheet.write('C9', f"{round((player.redGames / (player.gamesCount + player.redGames) * 100), 2)}%")
    worksheet.write('B10', player.redWins); worksheet.write('C10', f"{round((player.redWins / (player.redWins + player.redLoses + player.redDraws) * 100), 2)}%")
    worksheet.write('B11', player.redLoses); worksheet.write('C11', f"{round((player.redLoses / (player.redWins + player.redLoses + player.redDraws) * 100), 2)}%")
    worksheet.write('B12', player.redDraws); worksheet.write('C12', f"{round((player.redDraws / (player.redWins + player.redLoses + player.redDraws) * 100), 2)}%")
    
    worksheet.write('B14', player.bluGames); worksheet.write('C14', f"{round((player.bluGames / (player.gamesCount + player.bluGames) * 100), 2)}%")
    worksheet.write('B15', player.bluWins); worksheet.write('C15', f"{round((player.bluWins / (player.bluWins + player.bluLoses + player.bluDraws) * 100), 2)}%")
    worksheet.write('B16', player.bluLoses); worksheet.write('C16', f"{round((player.bluLoses / (player.bluWins + player.bluLoses + player.bluDraws) * 100), 2)}%")
    worksheet.write('B17', player.bluDraws); worksheet.write('C17', f"{round((player.bluDraws / (player.bluWins + player.bluLoses + player.bluDraws) * 100), 2)}%")
    
    worksheet.write('B20', player.scoutGames)
    worksheet.write('C20', player.scoutPlayTime)
    worksheet.write('D20', player.scoutKills)
    worksheet.write('E20', player.scoutAssists)
    worksheet.write('F20', player.scoutDeaths)
    worksheet.write('G20', player.scoutKD)
    worksheet.write('H20', player.scoutKDA)
    worksheet.write('I20', player.scoutDPM)
    worksheet.write('J20', player.scoutDTM)
    worksheet.write('K20', player.scoutDMG)
    worksheet.write('L20', player.scoutDT)
    worksheet.write('M20', player.scoutKPM)
    worksheet.write('N20', player.scoutDAPD)
    worksheet.write('O20', player.scoutHR)
    # worksheet.write('P20', 0) # player.scoutACC
    
    worksheet.write('B23', player.soldierGames)
    worksheet.write('C23', player.soldierPlayTime)
    worksheet.write('D23', player.soldierKills)
    worksheet.write('E23', player.soldierAssists)
    worksheet.write('F23', player.soldierDeaths)
    worksheet.write('G23', player.soldierKD)
    worksheet.write('H23', player.soldierKDA)
    worksheet.write('I23', player.soldierDPM)
    worksheet.write('J23', player.soldierDTM)
    worksheet.write('K23', player.soldierDMG)
    worksheet.write('L23', player.soldierDT)
    worksheet.write('M23', player.soldierKPM)
    worksheet.write('N23', player.soldierDAPD)
    worksheet.write('O23', player.soldierHR)
    worksheet.write('P23', player.soldierAirshots)
    
    worksheet.write('B26', player.demoGames)
    worksheet.write('C26', player.demoPlayTime)
    worksheet.write('D26', player.demoKills)
    worksheet.write('E26', player.demoAssists)
    worksheet.write('F26', player.demoDeaths)
    worksheet.write('G26', player.demoKD)
    worksheet.write('H26', player.demoKDA)
    worksheet.write('I26', player.demoDPM)
    worksheet.write('J26', player.demoDTM)
    worksheet.write('K26', player.demoDMG)
    worksheet.write('L26', player.demoDT)
    worksheet.write('M26', player.demoKPM)
    worksheet.write('N26', player.demoDAPD)
    worksheet.write('O26', player.demoHR)
    worksheet.write('P26', player.demoAirshots)
    
    worksheet.write('B29', player.medicGames)
    worksheet.write('C29', player.medicPlayTime)
    worksheet.write('D29', player.medicKills)
    worksheet.write('E29', player.medicAssists)
    worksheet.write('F29', player.medicDeaths)
    worksheet.write('G29', player.medicKD)
    worksheet.write('H29', player.medicKDA)
    worksheet.write('I29', player.medicUbers)
    worksheet.write('J29', player.medicUD)
    worksheet.write('K29', player.medicHeals)
    worksheet.write('L29', player.medicDPM)
    worksheet.write('M29', player.medicDTM)
    worksheet.write('N29', player.medicDMG)
    worksheet.write('O29', player.medicDT)
    worksheet.write('P29', player.medicKPM)

    return worksheet

def create_file(player_list: list, can_skip_shitters: bool):
    workbook = xlsxwriter.Workbook('pickup_data.xlsx')
    green = workbook.add_format({'bg_color': '#28c840'})
    red = workbook.add_format({'bg_color': '#eb5449'})
    blue = workbook.add_format({'bg_color': '#1596f4'})
    yellow = workbook.add_format({'bg_color': '#eef415'})
    
    for index, player in enumerate(player_list):
        if can_skip_shitters and player.gamesCount <= 5:
            continue

        player = stats.calculate_averages(player)

        try:
            player.nick = general.remove_invalid_chars(player.nick)
            worksheet = workbook.add_worksheet(player.nick)
            worksheet = create_structure(worksheet, [green, red, blue, yellow])
            worksheet = write_data(worksheet, player)
            
            print(f"Succesfuly written [{index + 1}/{len(player_list)}]")
        
        except Exception as e:
            print(f"Writing data failed: {e}")

    try:
        workbook.close()
        print("Succesfully saved")
    except Exception as e:
        print(f"Couldn't save file: {e}")
